@inproceedings{Wang2011,
abstract = {This paper analyzes the form of two data serializing approaches used in web applications, XML and JSON. Considering that though both widely used, highly-efficient data transmission between these two methods is still a problem in application development. The features of these two data objects were analyzed and it was point out that how to translate correctly between these two objects. A recursive algorithm used to translate between these two types of data serializing forms was given based on the multi-tree data structure of XML and JSON objects. The efficiency of this algorithm was proved by translation experiments. When applied in web applications, this paper gives how to add the translation method in system structures of the applications. It gives how this method can improve system structure and the performance of the web applications. {\textcopyright} 2011 IEEE.},
author = {Wang, Guanhua},
booktitle = {Proceedings - 2011 3rd International Conference on Communications and Mobile Computing, CMC 2011},
doi = {10.1109/CMC.2011.25},
isbn = {9780769543574},
keywords = {AJAX,JSON,Web Service,XML,data structure,recursive,translate},
mendeley-groups = {CMPE541},
pages = {182--185},
publisher = {IEEE},
title = {{Improving data transmission in web applications via the translation between XML and JSON}},
url = {https://ieeexplore.ieee.org/document/5931189/},
year = {2011}
}
@article{Haq,
author = {Haq, ZU and Khan, GF and in Circuits, T Hussain - New Developments and undefined 2013},
journal = {universitypress.org.uk},
mendeley-groups = {CMPE541},
title = {{A Comprehensive analysis of XML and JSON web technologies}},
url = {http://universitypress.org.uk/library/2015/vienna/bypaper/CSSCC/CSSCC-14.pdf}
}
@article{GAO2011,
author = {GAO, Jing and DUAN, Hui-chuan},
journal = {en.cnki.com.cn},
mendeley-groups = {CMPE541},
pages = {18},
title = {{Research on data transmission efficiency of JSON}},
url = {https://en.cnki.com.cn/Article{\_}en/CJFDTotal-SJSJ201107015.htm http://en.cnki.com.cn/Article{\_}en/CJFDTotal-SJSJ201107015.htm},
year = {2011}
}
@article{Sandrih2017,
abstract = {It is important to choose the most appropriate format for data representation that will result in best performance and meet all needed requests. Nowadays, XML and JSON are the two most commonly used formats for data representation and/or interchange. When switching from one format for data representation to another, existing converters can be used. In this paper, we describe a converter from XML to JSON format and vice versa that we developed. Subsequently, we compare our converter with an existing, publicly available converter. We found that there are some differences and difficulties in conversion when applying different converters. Some results of our comparison are presented here.},
author = {Sandrih, Branislava and Tosic, Dusan and Filipovic, Vladimir},
file = {:home/tustunkok/Documents/Mendeley Desktop/Towards Efficient and Unified XMLJSON Conversion - A New Conversion - Sandrih, Tosic, Filipovic - 2017.pdf:pdf},
issn = {1820-4503},
journal = {Ipsi Bgd Transactions on Internet Research},
keywords = {JSON to XML,XML to JSON,data format converter},
mendeley-groups = {CMPE541},
number = {1, SI},
pages = {58--64},
title = {{Towards Efficient and Unified XML/JSON Conversion - A New Conversion}},
url = {https://www.researchgate.net/profile/Dusan-Tosic/publication/322057188{\_}Towards{\_}Efficient{\_}and{\_}Unified{\_}XMLJSON{\_}Conversion{\_}-{\_}a{\_}New{\_}Conversion{\_}Method{\_}Transactions{\_}on{\_}Internet{\_}Research{\_}TIR{\_}13158-64{\_}January{\_}2017/links/5a6b3f3f0f7e9b1c12d1f88f/Towards-Efficient-},
volume = {13},
year = {2017}
}
@article{Nogatz2014,
abstract = {Despite its rising popularity as data format especially for web services, the software ecosystem around the JavaScript Object Notation (JSON) is not as widely distributed as that of XML. For both data formats there exist schema languages to specify the structure of instance documents, but there is currently no opportunity to translate already existing XML Schema documents into equivalent JSON Schemas. In this paper we introduce an implementation of a language translator. It takes an XML Schema and creates its equivalent JSON Schema document. Our approach is based on Prolog and CHR. By unfolding the XML Schema document into CHR constraints, it is possible to specify the concrete translation rules in a declarative way.},
archivePrefix = {arXiv},
arxivId = {1406.2125},
author = {Nogatz, Falco and Fr{\"{u}}hwirth, Thom},
eprint = {1406.2125},
file = {:home/tustunkok/Documents/Mendeley Desktop/From XML Schema to JSON Schema Translation with CHR - Nogatz, Fr{\"{u}}hwirth - 2014.pdf:pdf},
keywords = {Constraint Handling Rules,JSON Schema,Language Translator,XML Schema,XSD},
mendeley-groups = {CMPE541},
month = {jun},
number = {2},
title = {{From XML Schema to JSON Schema: Translation with CHR}},
url = {http://arxiv.org/abs/1406.2125},
year = {2014}
}
@inproceedings{Guo2017,
abstract = {The data exchange efficiency of traditional XML is low and its versatility is poor, while JSON has a higher transmission efficiency compared with XML. As a lightweight data-interchange format, JSON is becoming more and more popular, but not as common as XML for its latter appearance in the application of web services. If we directly translate the XML data format into JSON data format, the original data will have format error. Since there is XML Schema Documents to validate XML format, and the JSON Schema to validate the JSON format. We can translate the XSD to its corresponding JSON Schema to make sure the translation from XML to JSON with no format error. So far, there is no much research on the translation from XSD into JSON Schema. In this paper we made a dictionary to translate every node of XSD to its equivalent JSON Schema format by unfolding the XSD. With some tests, we find the method can basically have a good translation result.},
author = {Guo, Shijiao and Xia, Hongxia and Xiang, Guangli},
booktitle = {2017 9th IEEE International Conference on Communication Software and Networks, ICCSN 2017},
doi = {10.1109/ICCSN.2017.8230338},
file = {:home/tustunkok/Documents/Mendeley Desktop/Research on the translation from XSD to JSON schema - Guo, Xia, Xiang - 2017.pdf:pdf},
isbn = {9781509038220},
keywords = {JSON schema,XSD,data translation},
mendeley-groups = {CMPE541},
month = {dec},
pages = {1393--1396},
publisher = {Institute of Electrical and Electronics Engineers Inc.},
title = {{Research on the translation from XSD to JSON schema}},
volume = {2017-Janua},
year = {2017}
}
@article{Fallside,
abstract = {XML Schema Part 0: Primer is a non-normative document intended to provide an easily readable description of the XML Schema facilities, and is oriented towards quickly understanding how to create schemas using the XML Schema language. XML Schema Part 1: Structures and XML Schema Part 2: Datatypes provide the complete normative description of the XML Schema language. This primer describes the language features through numerous examples which are complemented by extensive references to the normative texts.},
author = {Fallside, David C and Walmsley, Priscilla},
file = {:home/tustunkok/Documents/Mendeley Desktop/XML schema part 0 primer second edition - Fallside, recommendation, 2004 - Unknown.pdf:pdf},
isbn = {CR-xmlschema-0-20001024},
journal = {October},
mendeley-groups = {CMPE541},
number = {October},
pages = {1--84},
title = {{XML Schema Part 0: Primer Second Edition}},
url = {http://www.w3.org/TR/xmlschema-0/},
year = {2004}
}
@inproceedings{Pezoa2016,
abstract = {JSON-the most popular data format for sending API requests and responses-is still lacking a standardized schema or meta-data definition that allows the developers to specify the structure of JSON documents. JSON Schema is an attempt to provide a general purpose schema language for JSON, but it is still work in progress, and the formal specification has not yet been agreed upon. Why this could be a problem becomes evident when examining the behaviour of numerous tools for validating JSON documents against this initial schema proposal: Although they agree on most general cases, when presented with the greyer areas of the specification they tend to differ significantly. In this paper we provide the first formal definition of syntax and semantics for JSON Schema and use it to show that implementing this layer on top of JSON is feasible in practice. This is done both by analysing the theoretical aspects of the validation problem and by showing how to set up and validate a JSON Schema for Wikidata, the central storage for Wikimedia.},
author = {Pezoa, Felipe and Reutter, Juan L. and Suarez, Fernando and Ugarte, Mart{\'{i}}n and Vrgo{\v{c}}, Domagoj},
booktitle = {25th International World Wide Web Conference, WWW 2016},
doi = {10.1145/2872427.2883029},
file = {:home/tustunkok/Documents/Mendeley Desktop/Foundations of JSON schema - Pezoa et al. - 2016.pdf:pdf},
isbn = {9781450341431},
mendeley-groups = {CMPE541},
pages = {263--273},
publisher = {International World Wide Web Conferences Steering Committee},
title = {{Foundations of JSON schema}},
url = {http://dx.doi.org/10.1145/2872427.2883029.},
year = {2016}
}
@misc{JSONSchema,
mendeley-groups = {CMPE541},
title = {{JSON Schema | The home of JSON Schema}},
url = {http://json-schema.org/},
urldate = {2022-01-14}
}
@misc{Copilot,
mendeley-groups = {CMPE541},
title = {{GitHub Copilot {\textperiodcentered} Your AI pair programmer}},
url = {https://copilot.github.com/},
urldate = {2022-01-14}
}
